spring.application.name=indexer

# Disable web server for terminal application
spring.main.web-application-type=none

# Disable Spring Boot startup banner/logo
spring.main.banner-mode=off

# Logging configuration
logging.level.sg.edu.nus.iss.codebase.indexer=INFO
logging.pattern.console=%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Suppress startup and warning messages
logging.level.org.springframework=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.springframework.boot.StartupInfoLogger=OFF
logging.level.io.grpc=OFF
logging.level.io.netty=OFF

# Suppress Qdrant client error logs (e.g., collection not found during first run)
# This prevents stack traces for expected errors like "Collection doesn't exist" during initialization
logging.level.io.qdrant.client.QdrantClient=OFF
logging.level.io.qdrant.client=OFF
logging.level.io.qdrant=OFF

# Suppress gRPC errors for expected Qdrant collection not found errors
logging.level.io.grpc.netty=OFF
logging.level.io.grpc.internal=OFF
logging.level.io.grpc.Status=OFF
logging.level.io.grpc.StatusRuntimeException=OFF

# Additional comprehensive gRPC suppression
logging.level.io.grpc.stub=OFF
logging.level.io.grpc.okhttp=OFF
logging.level.io.grpc.Context=OFF
logging.level.grpc=OFF

# Suppress root gRPC and netty loggers
logging.level.io.netty.channel=OFF
logging.level.io.netty.util=OFF

# Ollama Configuration - Embedding Pipeline
# ==========================================
# Flow: Raw Text → nomic-embed-text → 768D Vector → Qdrant
spring.ai.ollama.base-url=${OLLAMA_BASE_URL}
spring.ai.ollama.chat.enabled=true
spring.ai.ollama.chat.options.model=${OLLAMA_CHAT_MODEL}
spring.ai.ollama.chat.options.temperature=0.7

# Embedding Model Configuration
spring.ai.ollama.embedding.enabled=true
spring.ai.ollama.embedding.options.model=${OLLAMA_EMBEDDING_MODEL}
# nomic-embed-text produces 768-dimensional vectors optimized for text understanding

# Vector Store Configuration (Qdrant Cloud)
# Configuration loaded from .env file
spring.ai.vectorstore.qdrant.host=${QDRANT_HOST}
spring.ai.vectorstore.qdrant.port=${QDRANT_PORT}
spring.ai.vectorstore.qdrant.use-tls=true
spring.ai.vectorstore.qdrant.api-key=${QDRANT_API_KEY}
spring.ai.vectorstore.qdrant.collection-name=dynamic-collection
spring.ai.vectorstore.qdrant.enabled=true

# Model selection for Spring AI
spring.ai.model.chat=ollama
spring.ai.model.embedding=ollama
